// Author: Kouek Kou

#include "/Engine/Public/Platform.ush"

#include "./GeoMath.ush"
#include "./Util.ush"

int MaxStepCnt;
float Step;
float RelativeLightness;
float2 RenderSize;
float2 LonRng;
float2 LatRng;
float2 HeightRng;
float4x4 EyeToEarth;
float4x4 InvProj;
SamplerState VolSamplerState;
SamplerState TFSamplerState;
Texture3D<float> VolInput;
Texture2D<float4> TFInput;
Texture2D<float> DepthInput;
RWTexture2D<float4> ColorOutput;

void TransformBLHToSamplePos(
    inout float3 BLHInSamplePosOut, inout float3 BLHMin,
    inout float3 BLHInvDlt, in float2 heightToCntrRngEarthLong) {
    float2 realheightToCntrRng = float2(HeightToCenter(heightToCntrRngEarthLong[0], BLHInSamplePosOut.y),
                    HeightToCenter(heightToCntrRngEarthLong[1], BLHInSamplePosOut.y));
    BLHMin.z = realheightToCntrRng[0];
    BLHInvDlt.z = 1.f / (realheightToCntrRng[1] - realheightToCntrRng[0]);
    BLHInSamplePosOut = (BLHInSamplePosOut - BLHMin) * BLHInvDlt;
}

[numthreads(THREAD_PER_GROUP_X, THREAD_PER_GROUP_Y, THREAD_PER_GROUP_Z)]
void DVR(int3 dispatchThreadID : SV_DispatchThreadID) {
#include "RayCastHead.ush"
        float t = tRng[start];
        int enterRng = 0;
        while (stepCnt <= MaxStepCnt && t <= tRng[start + 1]) {
            float3 samplePos = ECEFToBLH(pos);
            TransformBLHToSamplePos(samplePos, BLHMin, BLHInvDlt, heightToCntrRngEarthLong);

            if (all(samplePos >= float3(0.f, 0.f, 0.f)) && all(samplePos <= float3(1.f, 1.f, 1.f))) {
                ++enterRng;
                
                float scalar = VolInput.SampleLevel(VolSamplerState, samplePos, 0);
                float4 color = TFInput.SampleLevel(TFSamplerState, float2(scalar, .5f), 0);
                color.a *= RelativeLightness;

                rgb = rgb + (1.f - a) * color.a * color.rgb;
                a = a + (1.f - a) * color.a;
                if (a >= .95f)
                    break;
            }
            else if (enterRng != 0) // Leave the range after entered the range, braek
                break;
            
            pos += posDlt;
            t += step;
            ++stepCnt;
        }
#include "RayCastTail.ush"
}

[numthreads(THREAD_PER_GROUP_X, THREAD_PER_GROUP_Y, THREAD_PER_GROUP_Z)]
void PreIntDVR(int3 dispatchThreadID : SV_DispatchThreadID) {
#include "RayCastHead.ush"
    float t = tRng[start];
    float prevScalar;
    int enterRng = 0;
    while (stepCnt <= MaxStepCnt && t <= tRng[start + 1]) {
        float3 samplePos = ECEFToBLH(pos);
        TransformBLHToSamplePos(samplePos, BLHMin, BLHInvDlt, heightToCntrRngEarthLong);

        if (all(samplePos >= float3(0.f, 0.f, 0.f)) && all(samplePos <= float3(1.f, 1.f, 1.f))) {
            float scalar = VolInput.SampleLevel(VolSamplerState, samplePos, 0);
            if (enterRng == 0)
                prevScalar = scalar;
            float4 color = TFInput.SampleLevel(TFSamplerState, float2(prevScalar, scalar), 0);
            color.a *= RelativeLightness;

            rgb = rgb + (1.f - a) * color.rgb;
            a = a + (1.f - a) * color.a;
            if (a >= .95f)
                break;
            
            prevScalar = scalar;
            ++enterRng;
        }
        else if (enterRng != 0) // Leave the range after entered the range, braek
            break;
            
        pos += posDlt;
        t += step;
        ++stepCnt;
    }
#include "RayCastTail.ush"
}
